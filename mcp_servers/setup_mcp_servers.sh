#!/bin/bash

# MCP Servers Setup Script
# This script sets up all the MCP servers for use with Claude Desktop

set -e

echo "üöÄ Setting up MCP Servers..."

# Get the absolute path to the mcp_servers directory
MCP_SERVERS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVERS_DIR="$MCP_SERVERS_DIR/servers/src"

echo "üìÅ MCP Servers directory: $MCP_SERVERS_DIR"

# Check prerequisites
echo "üîç Checking prerequisites..."

# Check Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js is not installed. Please install Node.js first."
    exit 1
fi
echo "‚úÖ Node.js $(node --version) found"

# Check npm
if ! command -v npm &> /dev/null; then
    echo "‚ùå npm is not installed. Please install npm first."
    exit 1
fi
echo "‚úÖ npm $(npm --version) found"

# Check Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 is not installed. Please install Python 3 first."
    exit 1
fi
echo "‚úÖ Python $(python3 --version) found"

# Check uv
if ! command -v uv &> /dev/null; then
    echo "‚ùå uv is not installed. Installing uv..."
    curl -LsSf https://astral.sh/uv/install.sh | sh
    source $HOME/.cargo/env
    if ! command -v uv &> /dev/null; then
        echo "‚ùå Failed to install uv. Please install it manually: https://docs.astral.sh/uv/getting-started/installation/"
        exit 1
    fi
fi
echo "‚úÖ uv $(uv --version) found"

# Setup Python servers
echo "üêç Setting up Python MCP servers..."

# Time server
echo "‚è∞ Setting up Time server..."
cd "$SERVERS_DIR/time"
uv sync
echo "‚úÖ Time server ready"

# Git server
echo "üîß Setting up Git server..."
cd "$SERVERS_DIR/git"
uv sync
echo "‚úÖ Git server ready"

# Fetch server
echo "üåê Setting up Fetch server..."
cd "$SERVERS_DIR/fetch"
uv sync
echo "‚úÖ Fetch server ready"

# Setup TypeScript servers
echo "üì¶ Setting up TypeScript MCP servers..."

# Filesystem server
echo "üìÅ Setting up Filesystem server..."
cd "$SERVERS_DIR/filesystem"
npm install
npm run build
echo "‚úÖ Filesystem server ready"

# Memory server
echo "üß† Setting up Memory server..."
cd "$SERVERS_DIR/memory"
npm install
npm run build
echo "‚úÖ Memory server ready"

# Test all servers
echo "üß™ Testing MCP servers..."

echo "Testing Time server..."
cd "$SERVERS_DIR/time"
timeout 3 uv run mcp-server-time --help > /dev/null 2>&1 && echo "‚úÖ Time server test passed" || echo "‚ö†Ô∏è  Time server test failed"

echo "Testing Git server..."
cd "$SERVERS_DIR/git"
timeout 3 uv run mcp-server-git --help > /dev/null 2>&1 && echo "‚úÖ Git server test passed" || echo "‚ö†Ô∏è  Git server test failed"

echo "Testing Fetch server..."
cd "$SERVERS_DIR/fetch"
timeout 3 uv run mcp-server-fetch --help > /dev/null 2>&1 && echo "‚úÖ Fetch server test passed" || echo "‚ö†Ô∏è  Fetch server test failed"

echo "Testing Filesystem server..."
cd "$SERVERS_DIR/filesystem"
timeout 3 node dist/index.js /tmp > /dev/null 2>&1 && echo "‚úÖ Filesystem server test passed" || echo "‚ö†Ô∏è  Filesystem server test failed"

echo "Testing Memory server..."
cd "$SERVERS_DIR/memory"
timeout 3 node dist/index.js > /dev/null 2>&1 && echo "‚úÖ Memory server test passed" || echo "‚ö†Ô∏è  Memory server test failed"

echo ""
echo "üéâ MCP Servers setup complete!"
echo ""
echo "üìã Next steps:"
echo "1. Copy the configuration from $MCP_SERVERS_DIR/claude_desktop_config.json"
echo "2. Add it to your Claude Desktop configuration file:"
echo "   - macOS: ~/Library/Application Support/Claude/claude_desktop_config.json"
echo "   - Windows: %APPDATA%/Claude/claude_desktop_config.json"
echo "   - Linux: ~/.config/Claude/claude_desktop_config.json"
echo "3. Restart Claude Desktop"
echo ""
echo "üîß Available MCP servers:"
echo "   - Time: Time queries and timezone conversions"
echo "   - Git: Git repository operations"
echo "   - Fetch: Web content fetching and conversion"
echo "   - Filesystem: Secure file operations"
echo "   - Memory: Knowledge graph-based persistent memory"
echo ""
echo "üìñ For more information, see the README files in each server directory."